The ``0-add_integer`` module
============================

Using ``add_integer``
---------------------

importing the function from the module
    >>> add_integer = __import__('0-add_integer').add_integer

Adding 2 and 3
	>>> add_integer(2, 3)
	5

Subtracting 5 and 2
    >>> add_integer(5, -2)
    3

Adding 4.2 and 98
    >>> add_integer(4.2)
    102


Passing None
    >>> add_integer(None)
    Traceback (most recent call last):
	      ...
    TypeError: a must be an integer

Adding a number and a string
	>>> add_integer(2, "hi")
	Traceback (most recent call last):
			...
	TypeError: b must be an integer


Adding a letter and a number
    >>> add_integer('n', 1)
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer
	

adding two letters
	>>> add_integer('n', 'n')
	Traceback (most recent call last):
			...
	TypeError: a must be an integer


Adding a tuple
    >>> add_integer((1, 2))
    Traceback (most recent call last):
              ...
    TypeError: a must be an integer

Adding a number and a list
    >>> add_integer(1234, [1, 3])
    Traceback (most recent call last):
	      ...
    TypeError: b must be an integer

Adding a string
    >>> add_integer("Hi there")
    Traceback (most recent call last):
	      ...
    TypeError: a must be an integer

Adding two floats
    >>> add_integer(9.2, 9.1)
    18

Subtracting 98 and 3
    >>> add_integer(-3)
    95

Case Overflow:

    >>> add_integer(float('inf'), 0)
    Traceback (most recent call last):
    	      ...
    OverflowError: cannot convert float infinity to integer

Case Overflow 2:

    >>> add_integer(float('inf'), float('-inf'))
    Traceback (most recent call last):
    	      ...
    OverflowError: cannot convert float infinity to integer

Case NaN:

    >>> add_integer(0, float('nan'))
    Traceback (most recent call last):
    	      ...
    ValueError: cannot convert float NaN to integer
